<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="simpleButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAAAFHRFWHRUaXRsZQBMb29rdXA7
        U2VhcmNoO3Dy6EIAAAl0SURBVFhHrZcJUFRXFobjTGYyE02iWcxoJjMTU1Mpa2bKqTHRxAU1ooCogIqK
        irLIvghCCKDIJsgim4KCikYjNLvN0uzQICg0yN40O3S3IiI7irv8c+6j2yUIVTOVV/XVee++evf899xz
        7r3vLQBvsWu3dQAHXTMU/Ibsr42yb84n5/tVAQrHvyX7e+IPCv5IdjrepffTMVPxnvX3O8WgmJDXBSic
        v629z0VNz8L3xi4rP+gxLP3gn9LA4Zdcz3GMkVQP36Q6+CbWwYc4mlDL4R1fC6+4GngyeNXwiK2GO3H4
        kqjKJihVQyHijQJYuN/ZaXGsd42mFUpEYgzdf/g/MXjvAaairqsPhy6KehXRZL4mRYA1vrvTwhcqasY4
        fT4V1S1SVDfLUaOwVRJ6lnShqlkKdl9F95WNE1S8AnsW1XdAJCbIsnf1LTI4n7/OEu49gk3zJAGsceYO
        s6Nw8DwLE4cQDsMDgQhMa4YvXwLfKxL4KEmR4GhKI0E2uRHeCrzIeiUxxEQDPBmJYvgl1cI2vJAJeJ94
        eyoBs3RNvXCJX4LolGKcSy5CRFwe2oefoGnwMYdkYILG/scQK6jvewyOuw+JR6glW0u2hmx17wQ5zQMw
        Cy5gAj6YVsC2/Z44RU7tfC5wWLpHofz2A1y9NcZRfPMlRXTPIR+DkKyQWdl9FMrvo0A2RjBLSO+jvHsM
        NuFXmYDZ0wl4b4uRO05czoKNx1niHMwOReAafSykDgvJQSGzys6pY9Z5PpEnvYe8LrJd95D7SzpHUUKi
        HKK4HJhWwPs6Bm4IvpABS7cojv1OJ3D15kTHeZ3UuYIcsozsjlFkt48QEzaLyGx7aTPbRpHZOoIiEmgf
        eY0JmDNVBFhifKCl74qAM6kwdY2AGWHoGIJCGtlLB6PIIgcFnSMokY6iTDaKCvkIRLJhlBOl0mEUdQ4j
        t30Yqc1DSGseRlrLMPJIqG1ECRPwoWItmFQFnIDNe1zgcyoZxk5hHPp2x7mPM2gUDEHrMK7J7pEzGtkN
        GXg5YkQnVSL8YgnOJVYiJrMeqWXtKOkYQHEHCZAM4krjILLpO+uJHPhoOgGzN+5ygmcIDwYHg7HPPhh6
        1sfo4xHwm6gzorSLRi+5wzlLyKhFp3wAT54+oxUdnGXPrP1MvAiZ1XIUtvUjub4faSTCMqzoNQGsFF/s
        BYp5maOx3QEHPaKwxyYAe2wDsJ3WhQwKY6K4H8L2IeSLexDFK0NVw03cHRqD3+UybPoxEattYqDplICA
        2HKuvbxGitBoIVIrOpHTdBexN3phFiJkAj5WRIBbjn8p4EN13YOwdjkJLf3D2GHui61UliyEfBLARnMm
        oQLN7b0QSW5zjkOSbqBGNoDBx89wXXwbgSSAtbP3dZJbOBqeCX6VHPFVPTA5ns8EfKIUIPBRf00A26k+
        WrflACx+CIXmDido6jlDa7crEur7IGjsR9LVNvBzG2h/eAwt5yRcb+3FvXFg9Pk4hp8+R9/YE3TcGkIO
        jVrHNRn9ww8QdakIJ+JKcaW6G4b+uUzAXKWA9VuOTBagqm0NU4cgaGx3hIauI1S1bHGxogdZ4l5EJVbQ
        HPcjUtCI8NSaF86HnjxH/4On6Bl5CHFHH5qlAwiNr4DPxWuobZThoDcPyRUy7PPNYgI+Jdh2P0NVx32S
        gI+/32QJ4wP+UN9qDzWCPUdf70YqjSDoXBEePnoCy/BitPfdw8izcS70d2nk3TTa1u5h2qju0ObVi+sN
        3dB1uwLp7SHssz2NBKqMPd6CKQWwhGBT8MlqTTMYWPlgvc4BjtWaFjhbegvJlXIcC8/D8/Fx7PLPwx2a
        hgFy3ktWPjDGORc13sb1+m6UNdymSPRjIyVld9996BoFglfSAj33NCZg3psioBQwV0XDBPpm3lDVtqHw
        20BFwwynrsqRSCH0DM3Eg4dPYH6yGAVUYlJy3EmRqOvsR3HtTQgp2RilJEJYI4e+VxokHXehvfcYYq62
        YLsbnwmYP5UANi+frlQzwi5jD6zdZEXht8JKNROEC+XglUnhFZEFSWsPlwM+P5cjj0Rll3VxZCksayut
        60Z4SjX8qSJSc2ux0yIYF4Ut2HaYE/CZUoCOrtOLHGAR4AQsW2cIXYMjWKNpybF8vTHCCmW4UCJF0OUS
        RFwopFPPI2zzTEdsfhOyyzuRXtrOwe4Lq2S4UtwGy6BsyodeWDufhb1fLCLzJdjiksIE/Jl4hyVhguV/
        Jgn403ff78VWfRes2mDOsWydEULyZQjL78RPRS2wPHQZpaIWVFKybfVIo0iIkChsJcdyJBe1IiiuEqbH
        syGgiFxILMU6HVcYOUfiQmETzP24JHwhINZk0SQB85au3g0tWo5VNEw5vl1rgOO5UnhmtCG6uBNhKSLs
        Mg9DSkY5eigHfGMqYRKcT2LSYR0mRGDcDaqAHhyPFEBd9whik/JhbncSVp6X4RHFLUR/I9gpe8bPBv+a
        JGD+EhU9bNzhiBU094ylFJGA3C54pLfDW9CG80XtCOSVQmufP6wcolBQIkYD1X5DxyAX8hh+OfQtQqCi
        6QjHI9FIySynFVEGS8fTMLQ/yQQsJLhz4U97/vmaADYvn329Yic26Npzc89Yslofx7I74MZvxWF+CzxT
        WxBZ0IpTWfWw9eVB28gPy9UdsVyNILt5rw9MD53DbttQqG4+jODIHBJxg4SKUOS5Bm7qC4IVqyGXB8q9
        gCUha5i/eNl2qFP9L1c1wjLiG5XdOJrZDteUVqIFrsnNcEmiA2p6E8IyJTidLUZ4Rg1OpFfjZHoNIgS1
        COTXIFxQB2OXaKzVdofOtgPovbIb48NlKPJRh7fGgqPkaza39ij+jJRVMHfRUp3+VbQWsPJbttYQS1aR
        AEE7XFLIMee8Gc6JTRxO8WIOh7gGOMTWw4FHlu4P8urgzW/EqexGOlWdRbrZV5BEbsBgoR0nItdNFV7r
        vviBBMx6VQA7kLz/5UIVg0VLtPv/vXQLFjGW6GCFeTwRh+VmcVhGfGfKw7cmcVhqEkvwsGR/LL4xnuBr
        YrFRDBYbxmKTYwqsAwQ4ZGMHge0/JkQI7XBflo3wTX/vI39zXt2OlashO7ezDYOVy1+m4K/UPh0s078g
        FhBfEYscVT4P5ZstRG2YGqTJ+xG64cvONwlgf0fKn1OWE8of1P/XsnJjP67sX2Ce88rPfwzbsKAvSGNB
        l/XS+TrUNvPVCNAzdyl/oX8tqxwUGwQTwk5E7Fw4iyXhfwHswGArUY6z0gAAAABJRU5ErkJggg==
</value>
  </data>
</root>